name: Tag Release

on:
  push:
    branches:
      - main

jobs:
  tag:
    runs-on: ubuntu-latest

    outputs:
      skip_release: ${{ steps.check_tag.outputs.skip_release }}
      new_tag: ${{ env.NEW_TAG }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history and tags

      - name: Fetch all tags
        run: git fetch --tags

      - name: Get latest tag
        id: get_tag
        run: echo "TAG=$(git describe --tags --abbrev=0 --match 'v*' 2>/dev/null || echo 'v0.0.0')" >> $GITHUB_ENV

      - name: Determine new version
        id: versioning
        run: |
          OLD_TAG=${{ env.TAG }}
          echo "Previous tag: $OLD_TAG"

          if git log --format=%B -n 1 | grep -iqE "BREAKING CHANGE|major"; then
            TYPE="major"
          elif git log --format=%B -n 1 | grep -iqE "feat:"; then
            TYPE="minor"
          else
            TYPE="patch"
          fi

          MAJOR=$(echo $OLD_TAG | cut -d. -f1 | tr -d 'v')
          MINOR=$(echo $OLD_TAG | cut -d. -f2)
          PATCH=$(echo $OLD_TAG | cut_
